import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';
import ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';
import CloseIcon from '@mui/icons-material/Close';
import {
  Box,
  Button,
  Dialog,
  DialogContent,
  DialogTitle,
  IconButton,
  styled,
  Typography,
} from '@mui/material';
import Head from 'next/head';
import Link from 'next/link';
import React, { useState } from 'react';

import {
  HistoryDataDocument,
  useDeleteHistoryItmMutation,
  useHistoryDataQuery,
} from '@/generated/graphql';

import styles from '../styles/Home.module.css';
import { useAuthContext } from './components/auth-context-provider';
import { PageFormChangeEm } from './components/componentsForAuth/change-email';
import { PageFormChangePass } from './components/componentsForAuth/change-pass';
import { CustomDialog } from './components/modal';
import { Navbar } from './components/navbar';

const DropDownBtn = styled(Button)({
  color: 'white',
  backgroundColor: '#5CA6EB',
});

const CustomBox = styled(Box)({
  display: 'flex',
  flexDirection: 'column',
  justifyContent: 'space-around',
});

const BootstrapDialog = styled(Dialog)(({ theme }) => ({
  '& .MuiDialogContent-root': {
    padding: theme.spacing(2),
  },
  '& .MuiDialogActions-root': {
    padding: theme.spacing(1),
  },
}));

const ErrDialog = (title: string, description: JSX.Element) => {
  const [open, setOpen] = React.useState(false);

  const handleClose = () => {
    setOpen(false);
  };
  return (
    <BootstrapDialog
      onClose={handleClose}
      aria-labelledby="customized-dialog-title"
      open={open}
    >
      <DialogTitle sx={{ m: 0, p: 2 }} id="customized-dialog-title">
        {title}
      </DialogTitle>
      <IconButton
        aria-label="close"
        onClick={handleClose}
        sx={{
          position: 'absolute',
          right: 8,
          top: 8,
          color: (theme) => theme.palette.grey[500],
        }}
      >
        <CloseIcon />
      </IconButton>
      <DialogContent dividers>
        <Typography gutterBottom>{description}</Typography>
      </DialogContent>
    </BootstrapDialog>
  );
};
const Description = (deleteion: boolean, error: string | null | undefined) => {
  let description: JSX.Element | undefined;
  if (!deleteion) {
    description = (
      <Typography component={'p'}>Smazaní balíku nebylo úspěšné</Typography>
    );
  }
  if (error) {
    description = <Typography component={'p'}>{error}</Typography>;
  }
  if (!deleteion && error) {
    description = (
      <Typography component={'p'}>
        Smazaní balíku nebylo úspěšné : {error}
      </Typography>
    );
  }
  return description;
};
const CustomBoxBtnPart = styled(Box)({
  display: 'flex',
  flexDirection: 'row',
  gap: '20px',
  flexWrap: 'wrap',
  justifyContent: 'center',
});

// eslint-disable-next-line import/no-default-export
export default function UserPage() {
  const [deleteHisItm] = useDeleteHistoryItmMutation();
  const { user } = useAuthContext();
  const historyData = useHistoryDataQuery();
  const [close, SetClose] = useState(true);

  const DeleteItm = async (historyId: string) => {
    const result = await deleteHisItm({
      variables: {
        Id: historyId || '',
      },
      refetchQueries: [{ query: HistoryDataDocument }],
      awaitRefetchQueries: true,
    });
    const description = Description(
      !!result.data?.deleteHistoryItem?.deletion,
      result.data?.deleteHistoryItem?.error,
    );
    if (description) {
      ErrDialog('Chyba při mazání', description);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>User page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar user={user} />

      <main className={styles.main}>
        <CustomBox>
          <Typography
            style={{ textAlign: 'center' }}
            variant="h5"
            component="h1"
          >
            Historie
          </Typography>
          <DropDownBtn onClick={() => SetClose((prev) => !prev)}>
            {close ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}
          </DropDownBtn>
        </CustomBox>
        {close ? (
          <div></div>
        ) : historyData.loading ? (
          <div>Načítá se</div>
        ) : (
          // eslint-disable-next-line sonarjs/cognitive-complexity
          historyData.data?.historyUserData.map((historyItm) => {
            return (
              <Typography
                component={'div'}
                key={historyItm.historyId}
                style={{
                  backgroundColor: 'whitesmoke',
                  borderRadius: '10px',
                  margin: '20px',
                  border: '5px solid #0E95EB',
                }}
              >
                <Typography
                  component={'div'}
                  style={{
                    display: 'flex',
                    gap: '30px',
                    margin: '25px',
                    flexWrap: 'wrap',
                  }}
                >
                  <CustomDialog
                    title="Detail"
                    description={
                      <Typography component={'div'}>
                        <Typography component={'div'}>
                          <strong>Data dodavatele</strong>
                          <Typography component={'p'}>
                            Jmeno: {historyItm.suppData.name}
                          </Typography>
                          <Typography component={'p'}>
                            Pojisteni: {historyItm.suppData.insurance} Kč
                          </Typography>
                          <Typography component={'p'}>
                            Doruceni: {historyItm.suppData.delivery}
                          </Typography>
                          <Typography component={'p'}>
                            Vyzvednuti: {historyItm.suppData.pickup}
                          </Typography>
                          <Typography component={'p'}>
                            V boxu:{' '}
                            {historyItm.suppData.packInBox === 'No'
                              ? 'Ne'
                              : historyItm.suppData.packInBox === 'Yes'
                              ? 'Ano'
                              : ''}
                          </Typography>
                          <Typography component={'p'}>
                            Štítek:{' '}
                            {historyItm.suppData.shippingLabel === 'No'
                              ? 'Ne'
                              : historyItm.suppData.shippingLabel === 'Yes'
                              ? 'Ano'
                              : ''}
                          </Typography>
                          <Typography component={'p'}>
                            Na dobírku:{' '}
                            {historyItm.suppData.sendCashDelivery === 'No'
                              ? 'Ne'
                              : historyItm.suppData.sendCashDelivery === 'Yes'
                              ? 'Ano'
                              : ''}
                          </Typography>
                          <Typography component={'p'}>
                            Ve folii:{' '}
                            {historyItm.suppData.foil === 'No'
                              ? 'Ne'
                              : historyItm.suppData.foil === 'Yes'
                              ? 'Ano'
                              : ''}
                          </Typography>
                          <Typography component={'p'}>
                            Celkova cena: {historyItm.suppData.cost}
                          </Typography>
                        </Typography>
                      </Typography>
                    }
                  ></CustomDialog>
                  <Typography component={'div'} margin={'auto'}>
                    <strong>Oznaceni</strong>
                    <Typography style={{ textAlign: 'center' }} component={'p'}>
                      {historyItm.suppData.packName}
                    </Typography>
                  </Typography>
                  <CustomBoxBtnPart>
                    <Button
                      onClick={() => DeleteItm(historyItm.historyId)}
                      style={{
                        backgroundColor: 'red',
                        color: 'white',
                      }}
                    >
                      Smazat
                    </Button>
                    <Link href="https://zrukydoruky.dpd.cz/">
                      <Button
                        style={{
                          backgroundColor: '#23B8FA',
                          color: 'white',
                        }}
                      >
                        Objednat
                      </Button>
                    </Link>
                  </CustomBoxBtnPart>
                </Typography>
              </Typography>
            );
          })
        )}

        <Typography
          component={'div'}
          style={{
            display: 'flex',
            flexDirection: 'row',
            justifyContent: 'space-around',
            flexWrap: 'wrap',
          }}
        >
          <Typography component={'div'}>{<PageFormChangePass />}</Typography>
          <Typography component={'div'}>{<PageFormChangeEm />}</Typography>
        </Typography>
      </main>
    </div>
  );
}
