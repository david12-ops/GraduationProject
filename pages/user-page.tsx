import { QueryResult } from '@apollo/client';
import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';
import ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';
import { Box, Button, styled, Typography } from '@mui/material';
import Head from 'next/head';
import Link from 'next/link';
import React, { useState } from 'react';

import {
  Exact,
  HistoryDataDocument,
  HistoryDataQuery,
  useDeleteHistoryItmMutation,
  useHistoryDataQuery,
} from '@/generated/graphql';

import { useAuthContext } from '../copmonents/auth-context-provider';
import { PageFormChangeEm } from '../copmonents/componentsForAuth/change-email';
import { PageFormChangePass } from '../copmonents/componentsForAuth/change-pass';
import { CustomDialog } from '../copmonents/modal';
import { Navbar } from '../copmonents/navbar';
import styles from '../styles/Home.module.css';

const DropDownBtn = styled(Button)({
  color: 'white',
  backgroundColor: '#5CA6EB',
});

const CustomBox = styled(Box)({
  display: 'flex',
  flexDirection: 'column',
  justifyContent: 'space-around',
});

const CustomBoxBtnPart = styled(Box)({
  display: 'flex',
  flexDirection: 'row',
  gap: '20px',
  flexWrap: 'wrap',
  justifyContent: 'center',
});

const Refetch = async (
  data: QueryResult<
    HistoryDataQuery,
    Exact<{
      [key: string]: never;
    }>
  >,
) => {
  await data.refetch();
};

// eslint-disable-next-line import/no-default-export
export default function UserPage() {
  const [deleteHisItm] = useDeleteHistoryItmMutation();
  const { user } = useAuthContext();
  const historyData = useHistoryDataQuery();
  const [close, SetClose] = useState(true);

  const DeleteItm = async (historyId: string) => {
    await deleteHisItm({
      variables: {
        Id: historyId,
      },
      refetchQueries: [{ query: HistoryDataDocument }],
      awaitRefetchQueries: true,
    });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>User page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar user={user} />

      <main className={styles.main}>
        <CustomBox>
          <Typography
            style={{ textAlign: 'center' }}
            variant="h5"
            component="h1"
          >
            Historie
          </Typography>
          <DropDownBtn
            onClick={async () => {
              SetClose((prev) => !prev);
              await Refetch(historyData);
            }}
          >
            {close ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}
          </DropDownBtn>
        </CustomBox>
        {close ? (
          <div></div>
        ) : historyData.loading ? (
          <div>Načítá se ...</div>
        ) : (
          // eslint-disable-next-line sonarjs/cognitive-complexity
          historyData.data?.historyUserData.map((historyItm) => {
            return (
              <Typography
                component={'div'}
                key={historyItm.historyId}
                style={{
                  backgroundColor: 'whitesmoke',
                  borderRadius: '10px',
                  margin: '20px',
                  border: '5px solid #0E95EB',
                }}
              >
                <Typography
                  component={'div'}
                  style={{
                    display: 'flex',
                    gap: '30px',
                    margin: '25px',
                    flexWrap: 'wrap',
                  }}
                >
                  <CustomDialog
                    title="Detail"
                    description={
                      <Typography component={'div'}>
                        <Typography component={'div'}>
                          <strong>Data zásilkové služby</strong>
                          <Typography component={'p'}>
                            <strong>Jméno</strong>: {historyItm.suppData.name}
                          </Typography>
                          <Typography component={'p'}>
                            <strong>Pojištění</strong>:{' '}
                            {historyItm.suppData.insurance} Kč
                          </Typography>
                          <Typography component={'p'}>
                            <strong>Doručení</strong>:{' '}
                            {historyItm.suppData.delivery}
                          </Typography>
                          <Typography component={'p'}>
                            <strong>Vyzvednutí</strong>:{' '}
                            {historyItm.suppData.pickup}
                          </Typography>
                          <Typography component={'p'}>
                            <strong>V boxu</strong>:{' '}
                            {historyItm.suppData.packInBox === 'No'
                              ? 'Ne'
                              : historyItm.suppData.packInBox === 'Yes'
                              ? 'Ano'
                              : ''}
                          </Typography>
                          <Typography component={'p'}>
                            <strong>Štítek</strong>:{' '}
                            {historyItm.suppData.shippingLabel === 'No'
                              ? 'Ne'
                              : historyItm.suppData.shippingLabel === 'Yes'
                              ? 'Ano'
                              : ''}
                          </Typography>
                          <Typography component={'p'}>
                            <strong>Na dobírku</strong>:{' '}
                            {historyItm.suppData.sendCashDelivery === 'No'
                              ? 'Ne'
                              : historyItm.suppData.sendCashDelivery === 'Yes'
                              ? 'Ano'
                              : ''}
                          </Typography>
                          <Typography component={'p'}>
                            <strong>Ve fólii</strong>:{' '}
                            {historyItm.suppData.foil === 'No'
                              ? 'Ne'
                              : historyItm.suppData.foil === 'Yes'
                              ? 'Ano'
                              : ''}
                          </Typography>
                          <Typography component={'p'}>
                            <strong>Celková cena</strong>:{' '}
                            {historyItm.suppData.cost} Kč
                          </Typography>
                        </Typography>
                      </Typography>
                    }
                  ></CustomDialog>
                  <Typography component={'div'} margin={'auto'}>
                    <strong>Označení</strong>
                    <Typography style={{ textAlign: 'center' }} component={'p'}>
                      {historyItm.suppData.packName}
                    </Typography>
                  </Typography>
                  <CustomBoxBtnPart>
                    <Button
                      onClick={() => DeleteItm(historyItm.historyId)}
                      style={{
                        backgroundColor: 'red',
                        color: 'white',
                      }}
                    >
                      Smazat
                    </Button>
                    {historyItm.suppData.name === 'Dpd' ? (
                      <Link href="https://zrukydoruky.dpd.cz/">
                        <Button
                          style={{
                            backgroundColor: '#23B8FA',
                            color: 'white',
                          }}
                        >
                          Objednat
                        </Button>
                      </Link>
                    ) : (
                      <Button
                        style={{
                          backgroundColor: '#23B8FA',
                          color: 'white',
                        }}
                      >
                        Objednat
                      </Button>
                    )}
                  </CustomBoxBtnPart>
                </Typography>
              </Typography>
            );
          })
        )}

        <Typography
          component={'div'}
          style={{
            display: 'flex',
            flexDirection: 'row',
            justifyContent: 'space-around',
            flexWrap: 'wrap',
          }}
        >
          <Typography component={'div'}>{<PageFormChangePass />}</Typography>
          <Typography component={'div'}>{<PageFormChangeEm />}</Typography>
        </Typography>
      </main>
    </div>
  );
}
