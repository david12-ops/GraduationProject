import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';

import { useSuppDataQuery } from '@/generated/graphql';

import styles from '../../styles/Home.module.css';
import stylesF from '../../styles/stylesForm/style.module.css';
import { PackCard } from '../components/Cards/packsCard';
import { MediaCard } from '../components/Cards/SuppCards';
import { SearchAppBar2 } from '../components/navbar2';

// responzivitu vyresit a  sortovani

const IsTherePackage = (data: any) => {
  if (data?.length === 0) {
    return (
      <div
        style={{
          textAlign: 'center',
          color: 'orange',
          fontSize: '30px',
          fontWeight: 'bold',
        }}
      >
        Tento dodavatel nemá balíčky
      </div>
    );
  }
};

const IsThereSupp = (data: any) => {
  if (!data?.supplierId) {
    return (
      <div
        style={{
          textAlign: 'center',
          color: 'red',
          fontSize: '40px',
          fontWeight: 'bold',
        }}
      >
        Dodavatel nenalazen!!
      </div>
    );
  }
};

// eslint-disable-next-line import/no-default-export
export default function Page() {
  const suppD = useSuppDataQuery();
  const [selectedSuppData, SetSelectedSuppData] = useState({});

  const router = useRouter();
  const { query } = router;
  const { id } = query;

  useEffect(() => {
    const selectedSupp = suppD.data?.suplierData.find(
      (actPack: any) => actPack.supplierId === id,
    );

    const errSup = IsThereSupp(selectedSupp);
    const errPack = IsTherePackage(selectedSupp?.package);

    if (errSup) {
      SetSelectedSuppData({
        errorSup: errSup,
      });
    } else {
      // odelit errory od data
      SetSelectedSuppData({ data: selectedSupp });
      console.log(selectedSupp);
      SetSelectedSuppData({
        errorPack: errPack,
      });
    }
  }, [suppD.data?.suplierData, id]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Upadte package</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <SearchAppBar2 />
      <main className={styles.main}>
        <h1 style={{ textAlign: 'center' }}>
          Welocome to package detail of supplier
        </h1>
        {selectedSuppData.errorSup ?? (
          <MediaCard
            key={selectedSuppData.data?.supplierId}
            packInBox={selectedSuppData.data?.packInBox}
            name={selectedSuppData.data?.suppName}
            sendCash={selectedSuppData.data?.sendCashDelivery}
            folie={selectedSuppData.data?.foil}
            shippingLabel={selectedSuppData.data?.shippingLabel}
            pickUp={selectedSuppData.data?.pickUp}
            delivery={selectedSuppData.data?.delivery}
            insurance={selectedSuppData.data?.insurance}
            suppId={selectedSuppData.data?.supplierId}
          />
        )}
        <h2
          style={{
            marginTop: '20px',
            color: '#D67F76',
            fontSize: '30px',
            textAlign: 'center',
          }}
        >
          Packages
        </h2>
        {selectedSuppData.errorPack ? (
          <div>
            {selectedSuppData.errorPack}
            <div>
              <Link
                key="CreateFormPackage"
                href={`../../Forms/CreateFormPackage/${id}`}
              >
                <button className={stylesF.crudbtn}>Create</button>
              </Link>
            </div>
          </div>
        ) : (
          <div>
            <div
              style={{
                display: 'flex',
                justifyContent: 'space-between',
                flexWrap: 'wrap',
                maxWidth: '700px',
              }}
            >
              {selectedSuppData.data?.package.map((item: any) => {
                const keys = Object.keys(item);
                return keys.map((key: any) => (
                  <div
                    key={key}
                    style={{
                      backgroundColor: '#D67F76',
                      padding: '10px',
                      margin: '10px',
                      borderRadius: '10px',
                      boxSizing: 'border-box',
                    }}
                  >
                    <PackCard
                      key={key}
                      Name={item[key].name_package}
                      Cost={item[key].cost}
                      Weight={item[key].weight}
                      Width={item[key].width}
                      Length={item[key].Plength}
                      Heiht={item[key].height}
                      sId={selectedSuppData.data.supplierId}
                      keyPac={key}
                    />
                  </div>
                ));
              })}
            </div>
            <Link
              key="CreateFormPackage"
              href={`../../Forms/CreateFormPackage/${id}`}
            >
              <button className={stylesF.crudbtn}>Create</button>
            </Link>
          </div>
        )}
        {selectedSuppData.data?.package ? (
          <div>
            {JSON.stringify(Object.values(selectedSuppData.data.package))}
          </div>
        ) : (
          ' '
        )}
      </main>
      <footer className={styles.footer}></footer>
    </div>
  );
}
